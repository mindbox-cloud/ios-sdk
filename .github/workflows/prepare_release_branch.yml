name: Preparation for release 

on:
  push:
    branches:
      - 'release/*.*.*'

jobs:
  preparation:
    if: github.event.created
    
    runs-on: macos-latest
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version from branch name
        run: echo "VERSION=${GITHUB_REF#refs/heads/release/}" >> $GITHUB_ENV

      - name: Bump version
        run: ./.github/git-release-branch-create.sh "${{ env.VERSION }}"

      - name: Check if sdkVersion matches VERSION
        run: |
          SDK_VERSION=$(sed -n 's/^.*sdkVersion = "\(.*\)"/\1/p' SDKVersionProvider/SDKVersionProvider.swift)
          if [ "$SDK_VERSION" != "${{ env.VERSION }}" ]; then
            echo "SDK version ($SDK_VERSION) does not match the branch version (${{ env.VERSION }})."
            exit 1
          fi
        shell: bash
        
      - name: Create Pull Request
        run: |
          gh pr create \
            --base master \
            --head ${{ github.ref_name }} \
            --title "Release/${{ env.VERSION }}" \
            --body "Updates the release version to ${{ env.VERSION }}"
          PR_URL=$(gh pr view --json url --jq '.url')
          echo "PR_URL=$PR_URL" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
